import jenkins.model.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.plugins.credentials.Credentials


domain = Domain.global()
store = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

Credentials githubCredentials = (Credentials) new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL,"demo-github-credentials", 
    "The credentials to login into github and access the demo application that show how to build a docker image inside a docker swarm.", "demo-user", "demo-password")
Credentials dockerhubCredentials = (Credentials) new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL,"demo-dockerhub-credentials", 
    "The credentials to login into dockerhub and push images etc. Used in building the demo container.", "demo-user", "demo-password")


println "Adding the credentials to the store."
store.addCredentials(domain, githubCredentials)
store.addCredentials(domain, dockerhubCredentials)


// Now list out all the credentials to make sure they were added
Set<Credentials> allCredentials = new HashSet<Credentials>();

def creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
      com.cloudbees.plugins.credentials.Credentials.class
);

allCredentials.addAll(creds)

Jenkins.instance.getAllItems(com.cloudbees.hudson.plugins.folder.Folder.class).each{ f ->
 creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
      com.cloudbees.plugins.credentials.Credentials.class, f)
  allCredentials.addAll(creds)
  
}

for (c in allCredentials) {
   println("Found credential with id=" + c.id + ": description = " + c.description)
}
